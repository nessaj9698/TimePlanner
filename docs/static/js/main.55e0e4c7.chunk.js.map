{"version":3,"sources":["redux/reducers/rootReducer.js","components/Header.jsx","redux/store.js","firebase.js","components/content/tasks/tasksList/importance-radio.jsx","components/content/tasks/taskForm/taskForm.jsx","api/location-api.js","helpers/numerals-declensions.js","components/content/tasks/TasksHeader.jsx","components/content/tasks/tasksList/completed/CompletedTasks.jsx","components/content/tasks/tasksList/onHold/HoldedTasks.jsx","components/content/tasks/tasksList/TasksList.jsx","firebase/config.js","auth.js","components/myCalendar/header.jsx","components/myCalendar/myCalendar.jsx","components/myCalendar/build.js","components/sidebar/Sidebar.jsx","components/content/Content.jsx","components/Container.jsx","App.js","reportWebVitals.js","helpers/service-worker-check.js","index.js","components/myCalendar/styles.module.css","components/content/content.module.css","components/content/tasks/tasks.module.css","assets/img/logo.svg","assets/img/4-04.svg"],"names":["rootReducer","createSlice","name","initialState","isAuth","userName","userID","currentDay","plannedEvents","completedEvents","allPlannedDates","allCompletedDates","eventImportance","forecast","reducers","logIn","state","action","payload","logOut","setUserID","setCurrentDay","fetchPlannedEvents","fetchCompletedEvents","completeEvent","push","fetchAllPlannedDates","fetchAllCompletedDates","setEventImportance","fetchForecast","extraReducers","actions","Header","dispatch","useDispatch","useSelector","className","src","logo","alt","onClick","firebase","auth","signOut","store","configureStore","reducer","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","apps","length","app","initializeApp","getDatabase","tasksRef","user","date","status","ref","fetching","createAsyncThunk","a","deleteTask","taskID","remove","then","fetch","getEventsDates","console","log","get","data","tasks","prop","val","task","plannedDates","completedDates","newTask","text","importance","ImportanceRadio","props","FormControl","component","required","events","RadioGroup","row","onChange","FormControlLabel","value","control","Radio","label","TaskForm","useForm","mode","register","errors","formState","handleSubmit","reset","currentUser","onSubmit","taskText","JSON","stringify","replace","buttons","addTaskActive","type","style","taskInput","minLength","message","maxLength","validate","duplicate","formWarning","defaultValue","rules","render","field","onBlur","fieldState","invalid","isTouched","isDirty","error","checked","inputRef","add","getForecast","axios","response","city","list","result","i","fullDate","dt_txt","split","reverse","join","time","temperature","Math","round","main","temp","icon","weather","num_word","words","num","abs","TasksHeader","useState","isAddTaskActive","taskCount","setTaskCount","today","useEffect","eventsCount","getState","count","s","contentTitle","marginRight","map","item","key","black","pink","CompletedTasks","tasksRes","taskImportance","HoldedTasks","completeTask","TasksList","svg","uiConfig","signInFlow","callbacks","signInSuccessWithAuthResult","signInOptions","EmailAuthProvider","PROVIDER_ID","SignInScreen","Date","toLocaleDateString","onAuthStateChanged","displayName","uid","firebaseAuth","CalendarHeader","setValue","header","previous","clone","subtract","String","fromCharCode","current","format","next","MyCalendar","moment","updateLocale","week","dow","calendar","setCalendar","startDay","startOf","endDay","endOf","day","isBefore","Array","fill","buildCalendar","dayNames","body","calendarRow","includes","planned","completed","isSame","selected","Sidebar","Content","login","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","swCheck","navigator","window","addEventListener","serviceWorker","registration","scope","err","catch","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.55e0e4c7.chunk.js","sourcesContent":["import {createSlice} from '@reduxjs/toolkit'\r\n\r\n\r\n\r\nconst rootReducer = createSlice ( {\r\n    name:'auth',\r\n    initialState: {\r\n        isAuth:false,\r\n        userName: null,\r\n        userID:null,\r\n        currentDay:null,\r\n        plannedEvents:[],\r\n        completedEvents:[],\r\n        allPlannedDates:[],\r\n        allCompletedDates:[],\r\n        eventImportance:null,\r\n        forecast:[]\r\n        \r\n    },\r\n    reducers: {\r\n        logIn (state, action) {\r\n            state.isAuth = true;\r\n            state.userName = action.payload;\r\n        },\r\n        logOut(state,action) {\r\n            state.isAuth = false;\r\n            state.userName = null\r\n        },\r\n        setUserID(state,action) {\r\n            state.userID = action.payload\r\n        },\r\n        setCurrentDay(state,action) {\r\n            state.currentDay = action.payload\r\n        },\r\n        fetchPlannedEvents(state,action) {\r\n            state.plannedEvents = action.payload\r\n        },\r\n        fetchCompletedEvents(state,action) {\r\n            state.completedEvents = action.payload\r\n        },\r\n        completeEvent(state, action) {\r\n            state.completedEvents.push(action.payload)\r\n        },\r\n        fetchAllPlannedDates(state,action) {\r\n            state.allPlannedDates = action.payload\r\n        },\r\n        fetchAllCompletedDates(state,action) {\r\n            state.allCompletedDates = action.payload\r\n        },\r\n        setEventImportance(state,action) {\r\n            state.eventImportance = action.payload\r\n        },\r\n        fetchForecast(state,action) {\r\n            state.forecast = action.payload\r\n        }\r\n    },\r\n    extraReducers: {\r\n\r\n    }\r\n} )\r\n\r\nexport const {logIn, logOut, setUserID, setCurrentDay, fetchPlannedEvents,fetchCompletedEvents,fetchAllPlannedDates,fetchAllCompletedDates,setEventImportance,fetchForecast} = rootReducer.actions\r\n\r\nexport default rootReducer.reducer;","import logo from '../assets/img/logo.svg';\r\nimport React from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport firebase from '@firebase/app-compat';\r\nimport { logOut } from '../redux/reducers/rootReducer';\r\n\r\n\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n    const userName = useSelector(state => state.rootReducer.userName)\r\n\r\n    const signOut = () => {\r\n        firebase.auth().signOut()\r\n        dispatch(logOut())\r\n    }\r\n\r\n    if (userName) {\r\n        return (\r\n            <div className=\"header\">\r\n                <img src={logo} alt=\"\" />\r\n                <div>{userName}\r\n                    <button onClick={signOut} className='logout-button'>Выход</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    else {\r\n        return (\r\n            <div className=\"header\">\r\n                <img src={logo} alt=\"\" />\r\n                <div>{userName}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        rootReducer:rootReducer\r\n    }\r\n})\r\n\r\n\r\n\r\nexport default store;","// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getDatabase, get, ref, push, remove} from \"firebase/database\";\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebaseui/dist/firebaseui.css'\r\nimport { fetchPlannedEvents, fetchCompletedEvents,fetchAllPlannedDates,fetchAllCompletedDates } from \"./redux/reducers/rootReducer\";\r\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBhU-1JWJ9Qcocnx80L0xs1FALZxt4fneo\",\r\n  authDomain: \"timeplanner-4f01a.firebaseapp.com\",\r\n  databaseURL: \"https://timeplanner-4f01a-default-rtdb.europe-west1.firebasedatabase.app\",\r\n  projectId: \"timeplanner-4f01a\",\r\n  storageBucket: \"timeplanner-4f01a.appspot.com\",\r\n  messagingSenderId: \"58913837179\",\r\n  appId: \"1:58913837179:web:863e05d4d1955638e092de\"\r\n};\r\nexport const firebasee = !firebase.apps.length ? firebase.initializeApp(firebaseConfig) : firebase.app()\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst database = getDatabase();\r\n\r\nconst tasksRef = (user, date, status) => ref(database, `users/${user}/${status}/${date}`)\r\nexport const fetching  = createAsyncThunk(\r\n  'events/fetch',\r\n  async function(user,{dispatch}) {\r\n  })\r\n\r\nconst newTask = (user, date, status, dispatch, text, importance) => {\r\n  push(tasksRef(user, date, status), {\r\n    task: text,\r\n    importance\r\n  })\r\n  fetch(user, date, status, dispatch)\r\n  getEventsDates(user,dispatch)\r\n}\r\n\r\n\r\nexport const deleteTask = (user,status,date,taskID,dispatch) => {\r\n   remove(ref(database, `users/${user}/${status}/${date}/${taskID}`)).then(() => {\r\n      fetch(user, date, 'planned', dispatch)\r\n    fetch(user, date, 'completed', dispatch)\r\n    getEventsDates(user,dispatch)\r\n   console.log('deleted')\r\n    })\r\n  }\r\n\r\n\r\n\r\nexport const fetch = (user, date, status, dispatch) => {\r\n      if (status === 'planned') {\r\n       get(tasksRef(user, date, status)).then((data) => {\r\n        let tasks = []\r\n        for (let prop in data.val()) {\r\n          tasks.push(data.val()[prop].task)\r\n        }\r\n        dispatch(fetchPlannedEvents(data.val()))\r\n      })\r\n    } else if (status === 'completed') {\r\n       get(tasksRef(user, date, status, dispatch)).then((data) => {\r\n        dispatch(fetchCompletedEvents(data.val()))\r\n      })\r\n    }\r\n  }\r\n\r\n\r\nexport const getEventsDates = (user,dispatch) => {\r\n  get(ref(database, `users/${user}/planned`)).then((data) => {\r\n    let plannedDates = []\r\n    for (let prop in data.val()) {\r\n      plannedDates = [...plannedDates,prop]\r\n    }\r\n    dispatch(fetchAllPlannedDates(plannedDates));\r\n  })\r\n  get(ref(database, `users/${user}/completed`)).then((data) => {\r\n    let completedDates = []\r\n    for (let prop in data.val()) {\r\n      completedDates = [...completedDates,prop]\r\n    }\r\n    dispatch(fetchAllCompletedDates(completedDates));\r\n  })\r\n}\r\n\r\nexport const completeTask = (user, date, taskID, taskText,importance, dispatch) => {\r\n  remove(ref(database, `users/${user}/planned/${date}/${taskID}`)).then((data) => {\r\n    push(tasksRef(user, date, 'completed'), {\r\n      task: taskText,\r\n      importance\r\n    })\r\n    fetch(user, date, 'planned', dispatch)\r\n    fetch(user, date, 'completed', dispatch)\r\n    getEventsDates(user,dispatch)\r\n  })\r\n}\r\n\r\nexport default newTask\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { FormControl, RadioGroup, Radio, FormControlLabel } from '@mui/material';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nconst ImportanceRadio = (props) => {\r\n\r\n  return (\r\n    <FormControl component=\"form\" className='importances' required events={props.events}>\r\n      <RadioGroup row\r\n        name=\"radio-buttons-group\"\r\n        onChange={props.onChange}\r\n        events={props.events}\r\n      >\r\n        <FormControlLabel value=\"Маловажно\" control={<Radio events={props.events} />} label=\"Маловажно\" />\r\n        <FormControlLabel value=\"Важно\" control={<Radio events={props.events} />} label=\"Важно\" />\r\n        <FormControlLabel value=\"Очень важно\" control={<Radio events={props.events} />} label=\"Очень важно\" />\r\n      </RadioGroup>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default ImportanceRadio\r\n\r\n\r\n","import React from \"react\";\r\nimport { useSelector } from 'react-redux'\r\nimport style from '.././tasks.module.css'\r\nimport newTask from '../../../../firebase'\r\nimport { useDispatch } from 'react-redux'\r\nimport ImportanceRadio from '.././tasksList/importance-radio'\r\nimport { setEventImportance } from '../../../../redux/reducers/rootReducer'\r\nimport { useForm, Controller } from 'react-hook-form'\r\n\r\n\r\n\r\n\r\n\r\nconst TaskForm = (props) => {\r\n    const {\r\n        control,\r\n        register,\r\n        formState: {\r\n            errors\r\n        },\r\n        handleSubmit,\r\n        reset\r\n    } = useForm({\r\n        mode: 'onBlur'\r\n    });\r\n    const onSubmit = (data) => {\r\n        let taskText = JSON.stringify(data.task).replace(/\"/g, '')\r\n        let importance = JSON.stringify(data.buttons).replace(/\"/g, '')\r\n        newTask(currentUser, currentDay, 'planned', dispatch, taskText, importance);\r\n        reset()\r\n        props.addTaskActive(false);\r\n        props.addTaskActive(true);\r\n    }\r\n\r\n    const currentUser = useSelector(state => state.rootReducer.userID)\r\n    const currentDay = useSelector(state => state.rootReducer.currentDay)\r\n    let events = useSelector(state => state.rootReducer.plannedEvents)\r\n    const dispatch = useDispatch()\r\n    const duplicateValidation = (text) => {\r\n        for (let prop in events) {\r\n            if (events[prop].task == text) {\r\n                return 'Задача уже запланирована'\r\n            } else {\r\n                return true\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form action=\"\" onSubmit={handleSubmit(onSubmit)}>\r\n                <input type=\"text\" className={style.taskInput}\r\n                    {...register('task', {\r\n                        required: 'Обязательное поле',\r\n                        minLength: {\r\n                            value: 3,\r\n                            message: \"Минимум 3 символа\"\r\n                        },\r\n                        maxLength: {\r\n                            value: 55,\r\n                            message: 'Максимум 55 символов'\r\n                        },\r\n                        validate: {\r\n                            duplicate: duplicateValidation,\r\n\r\n                        }\r\n                    })}\r\n                />\r\n                {errors?.task && <p className={style.formWarning}>{errors.task.message}</p>}\r\n                <Controller\r\n                    control={control}\r\n                    name='buttons'\r\n                    defaultValue={''}\r\n                    rules={{ required: 'Выберите степень важности' }}\r\n                    render={({\r\n                        field: { onChange, onBlur, value, name, ref },\r\n                        fieldState: { invalid, isTouched, isDirty, error },\r\n                        formState, }) => (\r\n                        <ImportanceRadio\r\n                            onBlur={onBlur} // notify when input is touched\r\n                            onChange={onChange} // send value to hook form\r\n                            checked={value}\r\n                            inputRef={ref}\r\n                            events={props.events}\r\n                        />)}\r\n                />\r\n\r\n                {errors?.buttons && <p className={style.formWarning}>{errors.buttons.message}</p>}\r\n                <div>\r\n                </div>\r\n                <input type=\"submit\" value=\"Добавить\" className={style.add} />\r\n                <button className={style.remove} onClick={() => {\r\n                    props.addTaskActive(false);\r\n                    dispatch(setEventImportance(null))\r\n                }}>Отмена</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TaskForm","import axios from \"axios\";\r\nimport { fetchForecast } from \"../redux/reducers/rootReducer\";\r\n\r\n// Прогноз погоды в городе пользователя\r\n\r\nconst getForecast = (dispatch) => {\r\n    axios.get(\"https://ipapi.co/json/\").then((response) => {\r\n        let city = response.data.city\r\n        axios.get(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&units=metric&lang=Ru&appid=3dcf5fc3a4c113457010db72f93c7ad5`)\r\n          .then((response) => {\r\n            let forecast = response.data.list\r\n            let result = []\r\n            for (let i = 0; i < forecast.length; i++) {\r\n              result.push({\r\n                date:{\r\n                  fullDate:forecast[i].dt_txt.split(' ')[0].split('-').reverse().join('-'),\r\n                  time:forecast[i].dt_txt.split(' ')[1].split(':')[0]\r\n                },\r\n                temperature:Math.round(forecast[i].main.temp),\r\n               \r\n                icon:forecast[i].weather[0].icon\r\n              });\r\n             \r\n            }\r\n            dispatch(fetchForecast(result))\r\n          })\r\n      })\r\n}\r\n\r\n\r\nexport default getForecast","function num_word(value, words){  \r\n\tvalue = Math.abs(value) % 100; \r\n\tvar num = value % 10;\r\n\tif(value > 10 && value < 20) return words[2]; \r\n\tif(num > 1 && num < 5) return words[1];\r\n\tif(num == 1) return words[0]; \r\n\treturn words[2];\r\n}\r\n\r\nexport default num_word","import s from '../content.module.css'\r\nimport React from 'react'\r\nimport { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport store from '../../../redux/store'\r\nimport TaskForm from './taskForm/taskForm'\r\nimport getForecast from '../../../api/location-api'\r\nimport num_word from '../../../helpers/numerals-declensions'\r\n\r\nconst TasksHeader = () => {\r\n    const dispatch = useDispatch()\r\n    const [isAddTaskActive, addTaskActive] = useState(false)\r\n    const [taskCount, setTaskCount] = useState(0)\r\n    const today = useSelector(state => state.rootReducer.currentDay)\r\n    const events = useSelector(state => state.rootReducer.plannedEvents)\r\n    const forecast = useSelector(state => state.rootReducer.forecast)\r\n    let tasks = []\r\n\r\n    useEffect(() => {\r\n        getForecast(dispatch)\r\n    }, [])\r\n    useEffect(() => {\r\n        let eventsCount = store.getState().rootReducer.plannedEvents\r\n        let count = []\r\n        for (let prop in eventsCount) {\r\n            count.push(prop)\r\n            tasks.push(eventsCount[prop].task)\r\n        }\r\n        setTaskCount(count.length)\r\n    }, [events])\r\n\r\n    return (\r\n        <div className={s.contentTitle}>\r\n            <div className='today flex'>\r\n                <span style={{ marginRight: '20px' }} className='today-date'>{today}</span>\r\n                <div className='weather flex'>\r\n                    {forecast.map(item =>\r\n                        item.date.fullDate == today ?\r\n                            <div className='weatherItem' key={item.date.time}>\r\n                                <div className='weatherTime'>{item.date.time}</div>\r\n                                <img src={`http://openweathermap.org/img/wn/${item.icon}@2x.png`} alt=\"\" />\r\n                                <div className='weatherTemperature'>{item.temperature}</div>\r\n                            </div> : false\r\n                    )}\r\n                </div>\r\n            </div>\r\n            <div className='content-title'>\r\n                <span className={s.black}>У вас </span><span className={s.pink}>{taskCount} {num_word(taskCount, [\"задача\", \"задачи\", \"задач\"])} </span><span className={s.black}>на этот день</span>\r\n            </div>\r\n            <div className='add-task-wrapper'>\r\n                {!isAddTaskActive ? <button className='addTask' onClick={() => { addTaskActive(true) }}>Добавить задачу</button> : ' '}\r\n            </div>\r\n            {isAddTaskActive ? <TaskForm\r\n                addTaskActive={addTaskActive}\r\n                events={tasks}\r\n            /> : false}\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default TasksHeader;","import React from 'react';\r\nimport { fetch,deleteTask } from '../../../../../firebase';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\n\r\n\r\nconst CompletedTasks = () => {\r\n    const dispatch = useDispatch()\r\n    const currentUser = useSelector(state => state.rootReducer.userID)\r\n    const currentDay = useSelector(state => state.rootReducer.currentDay)\r\n\r\n    useEffect(() => {\r\n        fetch(currentUser,currentDay,'completed',dispatch)\r\n    }, [currentUser,currentDay])\r\n    const tasks = useSelector(state => state.rootReducer.completedEvents)\r\n    let tasksRes = []\r\n    for (let task in tasks) {\r\n        tasksRes.push({taskID:task,taskText:tasks[task].task,taskImportance:tasks[task].importance})  \r\n    }\r\n\r\n    return (\r\n        <div className='completedTasksList'>\r\n            <div className='completedTasks'>\r\n                {tasks ? \"Выполненные задачи\" : ''}\r\n            </div>\r\n        {tasksRes.map((item) => <div className=\"task\" key={item.taskText}>\r\n            <span className='taskText'>{item.taskText}</span>\r\n            <span className='importance'>{item.taskImportance}</span>\r\n            <span className='deleteTrigger'\r\n                onClick={() => {deleteTask(currentUser,'completed',currentDay,item.taskID,dispatch)}}\r\n            >x</span>\r\n        </div>)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CompletedTasks;","import React from 'react'\r\nimport { fetch, completeTask } from '../../../../../firebase';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { deleteTask } from '../../../../../firebase';\r\n\r\n\r\n\r\nconst HoldedTasks = () => {\r\n    let tasksRes = []\r\n    const dispatch = useDispatch()\r\n    const tasks = useSelector(state => state.rootReducer.plannedEvents)\r\n    const currentUser = useSelector(state => state.rootReducer.userID)\r\n    const currentDay = useSelector(state => state.rootReducer.currentDay)\r\n    const importance = useSelector(state => state.rootReducer.eventImportance)\r\n    useEffect(() => {\r\n        fetch(currentUser,currentDay,'planned',dispatch)\r\n    }, [currentUser,currentDay])\r\n    \r\n    for (let task in tasks) {\r\n        tasksRes.push({taskID:task,taskText:tasks[task].task,taskImportance:tasks[task].importance})\r\n    }\r\n    \r\n    return (\r\n        <div className='holdedTasksList'>\r\n           {  tasksRes.map(item => \r\n           \r\n        <div className=\"task\" key={item.taskID}>\r\n            <span className='taskText'>{item.taskText}</span>\r\n            <span className='importance'>{item.taskImportance}</span>\r\n            <div className=\"task-controls\">\r\n            <span className='completeTrigger'\r\n            onClick={() => completeTask(currentUser,currentDay,item.taskID,item.taskText,importance,dispatch)}\r\n            ><img src=\"https://img.icons8.com/ios-filled/10/000000/checkmark--v1.png\"/></span>\r\n            <span className='deleteTrigger'\r\n             onClick={() => {deleteTask(currentUser,'planned',currentDay,item.taskID,dispatch)}}\r\n            >x</span>\r\n            </div>\r\n           \r\n        </div>\r\n    )}\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default HoldedTasks;","import CompletedTasks from \"./completed/CompletedTasks\";\r\nimport HoldedTasks from \"./onHold/HoldedTasks\";\r\nimport React from 'react'\r\nimport { useSelector} from \"react-redux\";\r\nimport svg from  '../../../../assets/img/4-04.svg';\r\n\r\n\r\n\r\n\r\n\r\nconst TasksList = () => {\r\n    const plannedEvents = useSelector(state => state.rootReducer.plannedEvents)\r\n    const completedEvents = useSelector(state => state.rootReducer.completedEvents)\r\n  \r\n    return (\r\n        <div>\r\n            {(!plannedEvents & !completedEvents) ? \r\n            <div className=\"svg-wrapper\">\r\n            <img src={svg} className=\"svg\"/> \r\n            <p>На этот день задач не запланировано</p>\r\n            </div>\r\n            : false}\r\n            <HoldedTasks />\r\n            <CompletedTasks />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TasksList;","import firebase from 'firebase/compat/app';\r\n\r\n\r\n\r\n// Configure FirebaseUI.\r\nconst uiConfig = {\r\n    signInFlow: 'popup',\r\n    callbacks: {\r\n        signInSuccessWithAuthResult: () => {\r\n            return false;\r\n        }\r\n    },\r\n    signInOptions: [\r\n        firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n    ],\r\n};\r\n\r\nexport default uiConfig;","import React, { useEffect } from 'react';\r\nimport StyledFirebaseAuth from 'react-firebaseui/FirebaseAuth';\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logIn, setUserID } from './redux/reducers/rootReducer'\r\nimport { setCurrentDay } from './redux/reducers/rootReducer';\r\nimport uiConfig from './firebase/config';\r\nimport { getEventsDates } from './firebase';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction SignInScreen() {\r\n\r\n    const dispatch = useDispatch()\r\n    let today = new Date().toLocaleDateString().replace(/\\./g,'-');\r\n    \r\n    \r\n\r\n    useEffect(() => {\r\n        const authObserver = firebase.auth().onAuthStateChanged((user) => {\r\n            const currentUser = firebase.auth().currentUser\r\n            if (currentUser) {\r\n                dispatch(logIn(user.displayName))\r\n                dispatch(setUserID(currentUser.uid))\r\n                dispatch(setCurrentDay(today))\r\n                getEventsDates(currentUser.uid,dispatch)\r\n                \r\n            }\r\n\r\n        })\r\n        return authObserver\r\n    })\r\n        return (\r\n            <div>\r\n                <p>Please sign-in:</p>\r\n                <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default SignInScreen","import React from \"react\";\r\nimport s from './styles.module.css'\r\n\r\n\r\nexport default function CalendarHeader({value,setValue}) {\r\n    const currMonthName = () => {\r\n        return value.format('MMMM')\r\n    }\r\n    const currYear = () => {\r\n        return value.format('YYYY')\r\n    }\r\n    const prevMonth = () => {\r\n        return value.clone().subtract(1, 'month')\r\n    }\r\n    const nextMonth = () => {\r\n        return value.clone().add(1, 'month')\r\n    }\r\n    return (\r\n        <div className={s.header}>\r\n                <div className={s.previous}\r\n                onClick={() => setValue(prevMonth())}\r\n                >{String.fromCharCode(171)}</div>\r\n                <div className={s.current}>{currMonthName()} {currYear()}</div>\r\n                <div className={s.next}\r\n                onClick={() => setValue(nextMonth())}\r\n                >{String.fromCharCode(187)}</div>\r\n            </div>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport moment from \"moment\";\r\nimport 'moment/locale/ru'\r\nimport s from './styles.module.css'\r\nimport buildCalendar from \"./build\";\r\nimport CalendarHeader from \"./header\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setCurrentDay } from '../../redux/reducers/rootReducer';\r\nimport { fetching } from \"../../firebase\";\r\n\r\nexport default function MyCalendar() {\r\n    const dispatch = useDispatch()\r\n    moment.updateLocale('ru', { week: { dow: 1 } })\r\n    const [value, setValue] = useState(moment())\r\n    const [calendar, setCalendar] = useState([]);\r\n    const user = useSelector(state => state.rootReducer.currentUser)\r\n    const plannedDates = useSelector(state => state.rootReducer.allPlannedDates)\r\n    const completedDates = useSelector(state => state.rootReducer.allCompletedDates)\r\n\r\n    useEffect(() => {\r\n        setCalendar(buildCalendar(value))\r\n    }, [value])\r\n\r\n    useEffect(() => {\r\n        fetching(user)\r\n    }, [user])\r\n\r\n\r\n    return (\r\n        <div className={s.calendar}>\r\n            <CalendarHeader value={value} setValue={setValue} />\r\n            <div className={s.dayNames}>\r\n                {['Пн', \"Вт\", \"Ср\", \"Чт\", \"Пт\", \"Сб\", \"Вс\"].map((item) => <div key={item}>{item}</div>)}\r\n            </div>\r\n            <div className={s.body}>{calendar.map((week) =>\r\n                <div className={s.calendarRow} key={week}>\r\n                    {week.map((day) =>\r\n                        <div className={plannedDates.includes(day.format('DD-MM-YYYY')) === true ? `${s.planned}` : completedDates.includes(day.format('DD-MM-YYYY')) === true ? `${s.completed}` : `day`}\r\n                            onClick={() => {\r\n                                setValue(day);\r\n                                dispatch(setCurrentDay(day.format('DD-MM-YYYY')))\r\n                            }} key={day}><div className={value.isSame(day, 'day') ? s.selected : ''}>\r\n                                {day.format('D')}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            )}</div>\r\n        </div>\r\n    )\r\n}","export default function buildCalendar(value) {\r\n    const startDay = value.clone().startOf('month').startOf('week');\r\n    const endDay = value.clone().endOf('month').endOf('week');\r\n\r\n    const day = startDay.clone().subtract(1, 'day')\r\n    const calendar = []\r\n    while (day.isBefore(endDay, 'day')) {\r\n        calendar.push(\r\n            Array(7)\r\n                .fill(0)\r\n                .map(() => day.add(1, 'day').clone())\r\n        )\r\n\r\n    }\r\n    return calendar\r\n}","import React from 'react'\r\nimport MyCalendar from '../myCalendar/myCalendar';\r\n\r\n\r\n\r\nconst Sidebar = () => {\r\n\r\n    return (\r\n        <div>\r\n            <MyCalendar/>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Sidebar;","import React from 'react'\r\nimport TasksHeader from './tasks/TasksHeader';\r\nimport TasksList from './tasks/tasksList/TasksList';\r\nimport SignInScreen from '../../auth';\r\nimport { useSelector } from 'react-redux';\r\nimport Sidebar from '../sidebar/Sidebar';\r\nimport s from './content.module.css'\r\n\r\nconst Content = () => {\r\n    const isAuth = useSelector(state => state.rootReducer.isAuth)\r\n\r\n    if (isAuth) {\r\n    return (\r\n        <div className='content'>\r\n            <div className='todos'>\r\n                <TasksHeader />\r\n                <TasksList />\r\n            </div>\r\n            <div className='sidebar'>\r\n                <Sidebar />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nelse {\r\n    return (\r\n        <div className={s.login}>\r\n            <SignInScreen/>\r\n        </div>\r\n    )\r\n}\r\n\r\n}\r\n\r\n\r\nexport default Content;","import Header from './Header';\r\nimport Content from './content/Content';\r\nimport React from 'react'\r\n\r\nconst Container = () => {\r\n  \r\n        return (\r\n            <div className='container'>\r\n                <Header />\r\n                <Content />\r\n            </div>\r\n        )\r\n    }\r\n  \r\n\r\n\r\n\r\nexport default Container;","import './App.css';\r\nimport React from 'react'\r\nimport Container from './components/Container';\r\nimport store from './redux/store';\r\n\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <script src=\"https://api-maps.yandex.ru/2.1/?apikey=59611a2e-87ee-45d1-840b-75810a5e5772\r\n&lang=ru_RU\"\r\n        type=\"text/javascript\"></script>\r\n\r\n      <style>\r\n        @import url('https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;700&display=swap');\r\n      </style>\r\n      <Container store={store} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","function swCheck() {\r\n    if ('serviceWorker' in navigator) {\r\n        window.addEventListener('load', function() {\r\n          navigator.serviceWorker.register('service-worker.js').then(function(registration) {\r\n            // Registration was successful\r\n            console.log('ServiceWorker registration successful with scope: ', registration.scope);\r\n          }, function(err) {\r\n            // registration failed :(\r\n            console.log('ServiceWorker registration failed: ', err);\r\n          }).catch(function(err) {\r\n            console.log(err)\r\n          });\r\n        });\r\n      } else {\r\n        console.log('service worker is not supported');\r\n      }\r\n}\r\n\r\nexport default swCheck\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store'\r\nimport swCheck from './helpers/service-worker-check';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\nswCheck();\r\nreportWebVitals();\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"calendar\":\"styles_calendar__3dCUq\",\"calendarRow\":\"styles_calendarRow__3obWO\",\"completed\":\"styles_completed__1s18p\",\"planned\":\"styles_planned__3yDoJ\",\"selected\":\"styles_selected__17CV9\",\"header\":\"styles_header__2jk1J\",\"dayNames\":\"styles_dayNames__2uRtc\",\"next\":\"styles_next__1gxnN\",\"previous\":\"styles_previous__3ew9u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"black\":\"content_black__1QqW0\",\"pink\":\"content_pink__1Qsqg\",\"contentTitle\":\"content_contentTitle__1oKfa\",\"login\":\"content_login__cLPIg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"add\":\"tasks_add__scY-l\",\"remove\":\"tasks_remove__1gadA\",\"taskInput\":\"tasks_taskInput__2cHza\",\"formWarning\":\"tasks_formWarning__26-3O\"};","module.exports = __webpack_public_path__ + \"static/media/logo.43889160.svg\";","module.exports = __webpack_public_path__ + \"static/media/4-04.dff83f42.svg\";"],"sourceRoot":""}